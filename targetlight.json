{
    "id": "adafruit",
    "platformid": "codal",
    "nickname": "circuitplayground",
    "name": "Adafruit Circuit Playground Express",
    "title": "Adafruit Circuit Playground Express - Blocks / Javascript editor",
    "description": "A Blocks / JavaScript code editor for the Adafruit Circuit Playground Express.",
    "corepkg": "circuit-playground",
    "serial": {
        "useHF2": true,
        "useEditor": true,
        "log": true,
        "editorTheme": {
            "graphBackground": "#d9d9d9",
            "lineColors": [
                "#009DDC",
                "#FB48C7",
                "#40bf4a",
                "#8073E5",
                "#d25b33"
            ]
        }
    },
    "simulator": {
        "autoRun": true,
        "streams": false,
        "aspectRatio": 1,
        "parts": false,
        "boardDefinition": {
            "id": "adafruit-circuit-playground-express",
            "visual": "circuitplayground",
            "gpioPinBlocks": [
                [
                    "P0"
                ],
                [
                    "P1"
                ],
                [
                    "P2"
                ],
                [
                    "P3"
                ],
                [
                    "P4",
                    "P5",
                    "P6",
                    "P7"
                ],
                [
                    "P8",
                    "P9",
                    "P10",
                    "P11",
                    "P12"
                ],
                [
                    "P16"
                ]
            ],
            "gpioPinMap": {
                "P0": "P0",
                "P1": "P1",
                "P2": "P2",
                "P3": "P3",
                "P4": "P4",
                "P5": "P5",
                "P6": "P6",
                "P7": "P7",
                "P8": "P8",
                "P9": "P9",
                "P10": "P10",
                "P11": "P11",
                "P12": "P12",
                "P13": "P13",
                "P14": "P14",
                "P15": "P15",
                "P16": "P16",
                "P19": "P19",
                "P20": "P20"
            },
            "i2cPins": {
                "SDA": "P2",
                "SCL": "P3"
            },
            "analogInPins": [
                "A0",
                "A4",
                "A5"
            ],
            "groundPins": [
                "GND_0",
                "GND_1",
                "GND_2"
            ],
            "threeVoltPins": [
                "PWR_0",
                "PWR_2"
            ],
            "attachPowerOnRight": true,
            "onboardComponents": [
                "accelerometer",
                "buttonpair",
                "speaker",
                "thermometer",
                "rgbsensor",
                "lightsensor",
                "microphone"
            ],
            "useCrocClips": true,
            "marginWhenBreadboarding": [
                0,
                0,
                80,
                0
            ],
            "bootloaderBaudSwitchInfo": {
                "vid": "0x239A",
                "pid": "0x8018"
            }
        }
    },
    "cloud": {
        "workspace": false,
        "packages": true,
        "sharing": true,
        "publishing": true,
        "importing": true,
        "thumbnails": true,
        "preferredPackages": [],
        "githubPackages": true,
        "cloudProviders": {
            "github": {}
        }
    },
    "compile": {
        "webUSB": true,
        "isNative": true,
        "useUF2": true,
        "hasHex": true,
        "deployDrives": ".*",
        "deployFileMarker": "INFO_UF2.TXT",
        "driveName": "CPLAYBOOT",
        "openocdScript": "source [find interface/cmsis-dap.cfg]; set CHIPNAME at91samd51g19; source [find target/at91samdXX.cfg]",
        "openocdScriptAlt": "source [find interface/stlink-v2.cfg]; set CPUTAPID 0x0bc11477; set CHIPNAME at91samd21g18; source [find target/at91samdXX.cfg]",
        "flashChecksumAddr": 8372,
        "flashCodeAlign": 256,
        "floatingPoint": true,
        "uf2Family": "0x68ed2b88",
        "gc": true,
        "patches": {
            "0.0.0 - 1.1.15": [
                {
                    "type": "package",
                    "map": {
                        "neopixel": "light",
                        "adafruit": "circuit-playground"
                    }
                },
                {
                    "type": "api",
                    "map": {
                        "Math\\s*\\.random\\s*\\(\\s*(\\d+)\\s*\\)": "Math.randomRange(0, $1)",
                        "light\\.pixels\\.(__)?setAll": "light.setAll",
                        "light\\.pixels\\.(__)?graph": "light.graph",
                        "light\\.pixels\\.(__)?setPixelColor": "light.setPixelColor",
                        "light\\.pixels\\.(__)?pixelColor": "light.pixelColor",
                        "light\\.pixels\\.(__)?setBrightness": "light.setBrightness",
                        "light\\.pixels\\.(__)?photonForward": "light.photonForward",
                        "light\\.pixels\\.(__)?photonFlip": "light.photonFlip",
                        "light\\.pixels\\.(__)?setPhotonColor": "light.setPhotonPenHue",
                        "light\\.pixels\\.(__)?setPhotonMode": "light.setPhotonMode",
                        "light\\.pixels\\.(__)?showAnimation": "light.showAnimation",
                        "light\\.pixels\\.(__)?showAnimationFrame": "light.showAnimation",
                        "light\\.pixels\\.(__)?clear": "light.clear",
                        "light\\.pixels\\.(__)?stopAllAnimations": "light.stopAllAnimations",
                        "light\\.createNeoPixelStrip": "light.createStrip",
                        "light\\.pixels\\.__setPixelWhiteLED": "light.pixels.setPixelWhiteLED",
                        "light\\.pixels\\.__show": "light.pixels.show",
                        "light\\.pixels\\.__length": "light.pixels.length",
                        "light\\.pixels\\.__brightness": "light.pixels.brightness",
                        "light\\.pixels\\.__range": "light.pixels.range",
                        "light\\.pixels\\.__move": "light.pixels.move",
                        "light\\.pixels\\.__setBuffered": "light.pixels.setBuffered",
                        "light\\.pixels\\.__setMode": "light.pixels.setMode",
                        "light\\.animation\\(LightAnimation\\.Rainbow\\)": "light.rainbowAnimation",
                        "light\\.animation\\(LightAnimation\\.RunningLights\\)": "light.runningLightsAnimation",
                        "light\\.animation\\(LightAnimation\\.Comet\\)": "light.cometAnimation",
                        "light\\.animation\\(LightAnimation\\.Sparkle\\)": "light.sparkleAnimation",
                        "light\\.animation\\(LightAnimation\\.TheaterChase\\)": "light.theaterChaseAnimation",
                        "light\\.animation\\(LightAnimation\\.ColorWipe\\)": "light.colorWipeAnimation"
                    }
                }
            ],
            "0.0.0 - 1.3.5": [
                {
                    "type": "api",
                    "map": {
                        "input\\.pinA([1-7])\\.": "input.touchA$1.",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.JumpUp\\)\\)": "music.jumpUp.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.JumpDown\\)\\)": "music.jumpDown.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.PowerUp\\)\\)": "music.powerUp.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.PowerDown\\)\\)": "music.powerDown.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.BaDing\\)\\)": "music.baDing.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.MagicWand\\)\\)": "music.magicWand.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.Siren\\)\\)": "music.siren.play$1()",
                        "music\\.playSound(UntilDone)?\\(music\\.sounds\\(Sounds\\.Wawawawaa\\)\\)": "music.wawawawaa.play$1()"
                    }
                }
            ]
        },
        "hidSelectors": [
            {
                "usagePage": "0xFF97",
                "usageId": "0x0001",
                "vid": "0x239A",
                "pid": "0x0018"
            },
            {
                "usagePage": "0xFF00",
                "usageId": "0x0001",
                "vid": "0x239A",
                "pid": "0x0018"
            },
            {
                "usagePage": "0xFF00",
                "usageId": "0x0001",
                "vid": "0x239A",
                "pid": "0x0019"
            },
            {
                "usagePage": "0xFF97",
                "usageId": "0x0001",
                "vid": "0x03EB",
                "pid": "0x2402"
            }
        ],
        "nativeType": "thumb",
        "switches": {},
        "jsRefCounting": false,
        "utf8": true
    },
    "runtime": {
        "mathBlocks": true,
        "loopsBlocks": true,
        "logicBlocks": true,
        "variablesBlocks": true,
        "textBlocks": true,
        "listsBlocks": true,
        "functionBlocks": true,
        "functionsOptions": {
            "useNewFunctions": true
        },
        "onStartNamespace": "loops",
        "onStartColor": "#40bf4a",
        "onStartWeight": 100
    },
    "compileService": {
        "buildEngine": "codal",
        "codalTarget": {
            "name": "codal-circuit-playground",
            "url": "C:/Users/Hoffk/Documents/GitHub/codal-dd1",
            "branch": "master",
            "type": "git",
            "dev": 1
        },
        "codalBinary": "CIRCUIT_PLAYGROUND",
        "yottaConfig": {
            "pxt": {
                "board": {
                    "id": "BOARD_ID_CPLAY"
                }
            }
        },
        "githubCorePackage": "lancaster-university/codal",
        "gittag": "master",
        "serviceId": "codal2cp",
        "dockerImage": "jeca/codal-dd1-image"
    },
    "uploadDocs": true,
    "unsupportedBrowsers": [
        {
            "id": "ie"
        }
    ],
    "versions": {
        "target": "1.6.8",
        "pxt": "6.8.38"
    },
    "blocksprj": {
        "id": "blocksprj",
        "config": {
            "name": "{0}",
            "dependencies": {
                "circuit-playground": "*"
            },
            "description": "",
            "files": [
                "main.blocks",
                "main.ts",
                "README.md"
            ],
            "additionalFilePaths": []
        },
        "files": {
            "main.blocks": "<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"forever\"></block>\n</xml>",
            "main.ts": "\n",
            "README.md": ""
        }
    },
    "tsprj": {
        "id": "tsprj",
        "config": {
            "name": "{0}",
            "dependencies": {
                "circuit-playground": "*"
            },
            "description": "",
            "files": [
                "main.ts",
                "README.md"
            ],
            "additionalFilePaths": []
        },
        "files": {
            "main.ts": "\n",
            "README.md": ""
        }
    }
}